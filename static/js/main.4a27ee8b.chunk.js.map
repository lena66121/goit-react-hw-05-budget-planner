{"version":3,"sources":["redux/selectors/selectors.js","components/styled-components/styles.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/BudgetForm.jsx","containers/BudgetFormContainer.jsx","redux/actions/actions.js","redux/constants.js","helpers/functions.js","components/ExpensesForm.jsx","containers/ExpensesFormContainer.jsx","components/ExpensesTable.jsx","containers/ExpensesTableContainer.jsx","components/Stat.jsx","components/Values.jsx","containers/ValuesContainer.jsx","components/App.jsx","containers/AppContainer.jsx","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["getAllExpenses","state","expenses","getBudget","budget","Container","styled","div","Table","table","Label","p","Value","StatContainer","props","isPositive","ValuesContainer","section","StyledForm","form","StyledButton","button","StyledInput","input","StyledLabel","label","customStyles","Form","onSubmit","children","Input","type","value","onChange","name","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","saveBudget","preventDefault","Number","alert","this","Component","mapDispatchToProps","payload","connect","calculateTotalExpenses","reduce","total","expense","amount","calculateBalance","ExpenseForm","onSave","totalExpenses","balance","id","shortid","generate","ExpensesTable","items","onRemove","map","key","Stat","defaultProps","Values","App","BudgetFormContainer","length","ExpensesTableContainer","rootReducer","combineReducers","action","filter","store","createStore","devToolsEnhancer","ReactDOM","render","AppContainer","document","getElementById"],"mappings":"oQAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAEhCC,EAAY,SAAAF,GAAK,OAAIA,EAAMG,Q,k/ECAjC,IAAMC,EAAYC,IAAOC,IAAV,KAYTC,EAAQF,IAAOG,MAAV,KAgBLC,EAAQJ,IAAOK,EAAV,KAQLC,EAAQN,IAAOK,EAAV,KAMLE,EAAgBP,IAAOC,IAAV,KAGf,SAAAO,GAAK,OAAKA,EAAMC,WAAa,UAAY,aAIvCC,EAAkBV,IAAOW,QAAV,KAMfC,EAAaZ,IAAOa,KAAV,KAUVC,EAAed,IAAOe,OAAV,KAwBZC,EAAchB,IAAOiB,MAAV,KAeXC,EAAclB,IAAOmB,MAAV,KAKpB,SAAAX,GAAK,OAAIA,EAAMY,gBCvGJC,EAJF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACX,EAAD,CAAYU,SAAUA,GAAWC,ICEpBnB,EAJD,SAAC,GAAD,IAAGmB,EAAH,EAAGA,SAAUH,EAAb,EAAaA,aAAb,OACZ,kBAACF,EAAD,CAAaE,aAAcA,GAAeG,ICM7BC,EAPD,SAAC,GAAD,QACZC,YADY,MACL,QADK,MAEZC,aAFY,MAEJ,GAFI,MAGZC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACZ,EAAD,CAAaS,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,KCCxDC,EANA,SAAC,GAAD,QAAGJ,YAAH,MAAU,SAAV,MAAoBN,aAApB,MAA4B,GAA5B,MAAgCW,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAAChB,EAAD,CAAcW,KAAMA,EAAMK,QAASA,GAChCX,IC4CUY,E,2MArCbpC,MAAQ,CAAEG,OAAQ,G,EAElBkC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZpC,OAAQmC,EAAEE,OAAOT,S,EAIrBU,aAAe,SAAAH,GAAM,IACXnC,EAAW,EAAKH,MAAhBG,OACAuC,EAAe,EAAK7B,MAApB6B,WACRJ,EAAEK,iBACEC,OAAOzC,IAAW,EAAG0C,MAAM,qIAC1BH,EAAWE,OAAOzC,IAEvB,EAAKoC,SAAS,CAAEpC,OAAQ,K,wEAGhB,IACAA,EAAW2C,KAAK9C,MAAhBG,OACR,OACE,kBAAC,EAAD,CAAMwB,SAAUmB,KAAKL,cACnB,kBAAC,EAAD,CAAOhB,aA3BE,gCA2BT,0BAEE,kBAAC,EAAD,CAAOK,KAAK,SAASC,MAAO5B,EAAQ6B,SAAUc,KAAKT,gBAGrD,kBAAC,EAAD,CAAQb,MAAM,OAAOM,KAAK,gB,GA5BTiB,a,iBCPnBC,EAAqB,CACzBN,WCFwB,SAAAX,GAAK,MAAK,CAClCD,KCJyB,cDKzBmB,QAASlB,KDGImB,cACb,KACAF,EAFaE,CAGbd,G,QGXWe,EAAyB,SAAAlD,GACpC,OAAOA,EAASmD,QAAO,SAACC,EAAOC,GAAR,OAAoBD,EAAQC,EAAQC,SAAQ,IAGxDC,EAAmB,SAACrD,EAAQF,GAAT,OAAsBE,EAASF,G,8NCI/D,IAyEewD,E,2MApEbzD,MAAQ,CACNiC,KAAM,GACNsB,OAAQ,G,EAGVlB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOP,KAAOK,EAAEE,OAAOT,S,EAI9BU,aAAe,SAAAH,GAAM,IAAD,EACO,EAAKtC,MAAtBuD,EADU,EACVA,OAAQtB,EADE,EACFA,KADE,EAEmB,EAAKpB,MAAlCV,EAFU,EAEVA,OAAQF,EAFE,EAEFA,SAAUyD,EAFR,EAEQA,OAEpBC,EAAgBR,EAAuBlD,GACvC2D,EAAUJ,EAAiBrD,EAAQwD,GAEzCrB,EAAEK,kBACGY,EAASK,GAAuB,KAAXL,EAAcV,MAAM,wHACpCZ,GAASsB,EAEdG,E,yVAAO,CAAD,GAAM,EAAK1D,QADpB6C,MAAM,2NAGR,EAAKN,SAAS,CAAEN,KAAM,GAAIsB,OAAQ,K,wEAG1B,IAAD,EACkBT,KAAK9C,MAAtBuD,EADD,EACCA,OAAQtB,EADT,EACSA,KAChB,OACE,kBAAC,EAAD,CAAMN,SAAUmB,KAAKL,cACnB,kBAAC,EAAD,CAAOhB,aApCE,gCAoCT,qBAEE,kBAAC,EAAD,CACEK,KAAK,OACLG,KAAK,OACLF,MAAOE,EACPD,SAAUc,KAAKT,gBAGnB,kBAAC,EAAD,CAAOZ,aA7CE,gCA6CT,uBAEE,kBAAC,EAAD,CACEK,KAAK,SACLG,KAAK,SACLF,MAAOwB,EACPvB,SAAUc,KAAKT,gBAInB,kBAAC,EAAD,CAAQb,MAAM,MAAMM,KAAK,gB,GAnDPiB,aCFpBC,EAAqB,CACzBU,OJHyB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAMsB,EAAT,EAASA,OAAT,MAAuB,CAChDzB,KCRyB,cDSzBmB,QAAS,CACPY,GAAIC,IAAQC,WACZ9B,OACAsB,OAAQX,OAAOW,OICJL,eATS,SAAAlD,GAAK,MAAK,CAChCG,OAAQD,EAAUF,GAClBC,SAAUF,EAAeC,MASzBgD,EAFaE,CAGbO,GCsBaO,EAlCO,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACpB,kBAAC3D,EAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACG0D,EAAME,KAAI,gBAAGN,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAMsB,EAAb,EAAaA,OAAb,OACT,wBAAIa,IAAKP,GACP,4BAAK5B,GACL,4BAAKsB,GACL,4BACE,kBAAC,EAAD,CAAQ/B,MAAM,SAASW,QAAS,kBAAM+B,EAASL,cCXrDb,GAAqB,CACzBkB,SNO2B,SAAAL,GAAE,MAAK,CAClC/B,KChB4B,iBDiB5BmB,QAASY,KMNIX,gBARS,SAAAlD,GAAK,MAAK,CAChCiE,MAAOlE,EAAeC,MAStBgD,GACA,KAHaE,CAIbc,GCbIK,GAAO,SAAC,GAAD,IAAG7C,EAAH,EAAGA,MAAOO,EAAV,EAAUA,MAAOjB,EAAjB,EAAiBA,WAAjB,OACX,kBAACF,EAAD,CAAeE,WAAYA,GACzB,kBAAC,EAAD,KAAQU,GACR,kBAACb,EAAD,KAAQoB,EAAR,WAIJsC,GAAKC,aAAe,CAClBxD,YAAY,GASCuD,UCOAE,GAtBA,SAAC,GAA0B,IAAxBpE,EAAuB,EAAvBA,OAAQF,EAAe,EAAfA,SAClB0D,EAAgBR,EAAuBlD,GACvC2D,EAAUJ,EAAiBrD,EAAQwD,GACzC,OACE,kBAAC5C,EAAD,KACE,kBAAC,GAAD,CAAMS,MAAM,SAASO,MAAO5B,EAAQW,YAAU,IAC9C,kBAAC,GAAD,CAAMU,MAAM,WAAWO,MAAO4B,IAC9B,kBAAC,GAAD,CAAMnC,MAAM,UAAUO,MAAO6B,EAAS9C,WAAY8C,GAAW,MCJpDV,gBALS,SAAAlD,GAAK,MAAK,CAChCG,OAAQD,EAAUF,GAClBC,SAAUF,EAAeC,MAGZkD,CAAyBqB,ICoBzBC,GArBH,SAAC,GAAkB,IAAhBvE,EAAe,EAAfA,SACb,OACE,kBAACG,EAAD,KACE,kBAACqE,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MACCxE,EAASyE,OAAS,GAAK,kBAACC,GAAD,QCNfzB,gBAJS,SAAAlD,GAAK,MAAK,CAChCC,SAAUF,EAAeC,MAGZkD,CAAyBsB,I,0BCoBzBI,GALKC,2BAAgB,CAClC1E,OArBoB,WAAwB,IAAvBH,EAAsB,uDAAd,EAAG8E,EAAW,uCAC3C,OAAQA,EAAOhD,MACb,IXLuB,cWMrB,OAAOgD,EAAO7B,QAChB,QACE,OAAOjD,IAiBXC,SAbsB,WAAyB,IAAxBD,EAAuB,uDAAf,GAAI8E,EAAW,uCAC9C,OAAQA,EAAOhD,MACb,IXbuB,cWcrB,MAAM,GAAN,oBAAW9B,GAAX,CAAkB8E,EAAO7B,UAC3B,IXd0B,iBWexB,OAAOjD,EAAM+E,QAAO,SAAAzB,GAAO,OAAIA,EAAQO,KAAOiB,EAAO7B,WACvD,QACE,OAAOjD,MCbEgF,GAFDC,uBAAYL,GAAaM,+B,MCIvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAACK,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4a27ee8b.chunk.js","sourcesContent":["export const getAllExpenses = state => state.expenses;\n\nexport const getBudget = state => state.budget;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nexport const StatContainer = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nexport const ValuesContainer = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n","import React from 'react';\n\nimport { StyledForm } from '../styled-components/styles';\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nexport default Form;\n","import React from 'react';\nimport { StyledLabel } from '../styled-components/styles';\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nexport default Label;\n","import React from 'react';\nimport { StyledInput } from '../styled-components/styles';\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nexport default Input;\n","import React from 'react';\nimport { StyledButton } from '../styled-components/styles';\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  state = { budget: 0 };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { budget } = this.state;\n    const { saveBudget } = this.props;\n    e.preventDefault();\n    if (Number(budget) <= 0) alert('Введите валидный бюджет!');\n    else saveBudget(Number(budget));\n\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  saveBudget: PropTypes.func.isRequired,\n};\n\nexport default BudgetForm;\n","import { connect } from 'react-redux';\nimport BudgetForm from '../components/BudgetForm';\nimport { saveBudget } from '../redux/actions/actions';\n\nconst mapDispatchToProps = {\n  saveBudget,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import shortid from 'shortid';\nimport { REMOVE_EXPENSE, SAVE_BUDGET, ADD_EXPENSE } from '../constants';\n\nexport const saveBudget = value => ({\n  type: SAVE_BUDGET,\n  payload: value,\n});\n\nexport const addExpenses = ({ name, amount }) => ({\n  type: ADD_EXPENSE,\n  payload: {\n    id: shortid.generate(),\n    name,\n    amount: Number(amount),\n  },\n});\n\nexport const removeExpense = id => ({\n  type: REMOVE_EXPENSE,\n  payload: id,\n});\n","export const SAVE_BUDGET = 'SAVE_BUDGET';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\n","export const calculateTotalExpenses = expenses => {\n  return expenses.reduce((total, expense) => total + expense.amount, 0);\n};\n\nexport const calculateBalance = (budget, expenses) => budget - expenses;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { calculateTotalExpenses, calculateBalance } from '../helpers/functions';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { amount, name } = this.state;\n    const { budget, expenses, onSave } = this.props;\n\n    const totalExpenses = calculateTotalExpenses(expenses);\n    const balance = calculateBalance(budget, totalExpenses);\n\n    e.preventDefault();\n    if (+amount > balance || +amount === 0) alert('Введите валидную суму');\n    else if (!name || !amount)\n      alert('Введите имя операции и валидное значение');\n    else onSave({ ...this.state });\n\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { amount, name } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ExpenseForm;\n","import { connect } from 'react-redux';\nimport ExpenseForm from '../components/ExpensesForm';\nimport { getAllExpenses, getBudget } from '../redux/selectors/selectors';\nimport { addExpenses } from '../redux/actions/actions';\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: getAllExpenses(state),\n});\n\nconst mapDispatchToProps = {\n  onSave: addExpenses,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './shared/Button';\nimport { Table } from './styled-components/styles';\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport ExpensesTable from '../components/ExpensesTable';\nimport { removeExpense } from '../redux/actions/actions';\nimport { getAllExpenses } from '../redux/selectors/selectors';\n\nconst mapStateToProps = state => ({\n  items: getAllExpenses(state),\n});\n\nconst mapDispatchToProps = {\n  onRemove: removeExpense,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Value, StatContainer } from './styled-components/styles';\n\nconst Stat = ({ label, value, isPositive }) => (\n  <StatContainer isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </StatContainer>\n);\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stat from './Stat';\nimport { calculateTotalExpenses, calculateBalance } from '../helpers/functions';\nimport { ValuesContainer } from './styled-components/styles';\n\nconst Values = ({ budget, expenses }) => {\n  const totalExpenses = calculateTotalExpenses(expenses);\n  const balance = calculateBalance(budget, totalExpenses);\n  return (\n    <ValuesContainer>\n      <Stat label=\"Budget\" value={budget} isPositive />\n      <Stat label=\"Expenses\" value={totalExpenses} />\n      <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </ValuesContainer>\n  );\n};\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Values;\n","import { connect } from 'react-redux';\nimport Values from '../components/Values';\nimport { getAllExpenses, getBudget } from '../redux/selectors/selectors';\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: getAllExpenses(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BudgetFormContainer from '../containers/BudgetFormContainer';\nimport ExpenseFormContainer from '../containers/ExpensesFormContainer';\nimport ExpensesTableContainer from '../containers/ExpensesTableContainer';\nimport ValuesContainer from '../containers/ValuesContainer';\nimport { Container } from './styled-components/styles';\n\nconst App = ({ expenses }) => {\n  return (\n    <Container>\n      <BudgetFormContainer />\n      <ValuesContainer />\n      <ExpenseFormContainer />\n      {expenses.length > 0 && <ExpensesTableContainer />}\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { getAllExpenses } from '../redux/selectors/selectors';\nimport App from '../components/App';\n\nconst mapStateToProps = state => ({\n  expenses: getAllExpenses(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { SAVE_BUDGET, ADD_EXPENSE, REMOVE_EXPENSE } from '../constants';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case SAVE_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expensesReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_EXPENSE:\n      return [...state, action.payload];\n    case REMOVE_EXPENSE:\n      return state.filter(expense => expense.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  budget: budgetReducer,\n  expenses: expensesReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './containers/AppContainer';\nimport store from './redux/store/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}